{"version":3,"sources":["logo.svg","Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","data","photos","allProduct","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","uuid","useEffect","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9432504.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst CartItem = ({ product, addInCart }) => {\r\n  return (\r\n    <Card className='mt-2 mb-1'>\r\n      <CardImg top height='250' width='100%' src={product.smallImage} />\r\n      <CardBody className='text-center'>\r\n        <CardTitle>{product.productName}</CardTitle>\r\n        <CardText className='secondary'>\r\n          price: RS {product.productPrice}\r\n        </CardText>\r\n        <Button color='success' onClick={() => addInCart(product)}>\r\n          Buy Now\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport CartItem from './CartItem';\r\n\r\nimport { random, commerce } from 'faker';\r\nimport { Container, Col, Row } from 'reactstrap';\r\n\r\nconst url = 'https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1';\r\nconst localurl = 'https://jsonkeeper.com/b/JPFB';\r\nconst BuyPage = ({ addInCart }) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const fetchPhotos = async () => {\r\n    const { data } = await Axios.get(localurl, {});\r\n\r\n    const { photos } = data;\r\n\r\n    const allProduct = photos.map(photo => ({\r\n      smallImage: photo.src.medium,\r\n      tinyImage: photo.src.tiny,\r\n      productName: random.word(),\r\n      productPrice: commerce.price(),\r\n      id: random.uuid(),\r\n    }));\r\n\r\n    setProduct(allProduct);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPhotos();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className='text-success text-center'>Buy Page</h1>\r\n      <Row>\r\n        {product.map(product => (\r\n          <Col md={4} key={product.id}>\r\n            <CartItem product={product} addInCart={addInCart} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BuyPage;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  CardHeader,\r\n  CardBody,\r\n  Card,\r\n  CardFooter,\r\n  Col,\r\n  Row,\r\n} from 'reactstrap';\r\n\r\nconst Cart = ({ cartItem, removeItem, buyNow }) => {\r\n  let amount = 0;\r\n\r\n  cartItem.forEach(item => {\r\n    amount = parseFloat(amount) + parseFloat(item.productPrice);\r\n  });\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className='text-success'>Your Cart</h1>\r\n      <ListGroup>\r\n        {cartItem.map(item => (\r\n          <ListGroupItem key={item.id}>\r\n            <Row>\r\n              <Col>\r\n                <img height={80} src={item.tinyImage} />\r\n              </Col>\r\n              <Col className='text-center'>\r\n                <div className='text-primary'>{item.productName}</div>\r\n                <span>price :- {item.productPrice}</span>\r\n                <Button color='danger' onClick={() => removeItem(item)}>\r\n                  Remove\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      {/* If everything is empty */}\r\n      {cartItem.length >= 1 ? (\r\n        <Card className='text-center mt-3'>\r\n          <CardHeader>Grand Total</CardHeader>\r\n          <CardBody>\r\n            Your amount for {cartItem.length} product is {amount}\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button color='success' onClick={buyNow}>\r\n              Pay here\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      ) : (\r\n        <h1 className='text-warning'>Cart is empty</h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nimport { Container, Row, Col } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport BuyPage from './Components/BuyPage';\nimport Cart from './Components/Cart';\n\nfunction App() {\n  const [cartItem, setCartItem] = useState([]);\n\n  const addInCart = item => {\n    const isAlreadyAdded = cartItem.findIndex(function (array) {\n      return array.id === item.id;\n    });\n\n    if (isAlreadyAdded !== -1) {\n      toast('already added in cart', {\n        type: 'error',\n      });\n      return;\n    }\n\n    setCartItem([...cartItem, item]);\n  };\n\n  const buyNow = () => {\n    setCartItem([]);\n\n    toast('Purchase Complete Happy Shopping...', {\n      type: 'success',\n    });\n  };\n\n  const removeItem = item => {\n    setCartItem(cartItem.filter(singleItem => singleItem.id !== item.id));\n  };\n\n  return (\n    <Container fluid>\n      <ToastContainer />\n      <Row>\n        <Col md='8'>\n          <BuyPage addInCart={addInCart} />\n        </Col>\n        <Col md='4'>\n          <Cart cartItem={cartItem} removeItem={removeItem} buyNow={buyNow} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}